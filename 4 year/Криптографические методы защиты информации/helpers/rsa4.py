# -*- coding: utf-8 -*-

from base import modinv


N1 = 363542076673
N2 = 728740902979
N3 = 522993716719

C1 = [
    17599664694,
    221343847340,
    181796040962,
    210108814452,
    124320289825,
    323995715057,
    260285700707,
    72474978285,
    226746757036,
    369084323018,
    133261286623,
    336107911000,
    303767221006,
]

C2 = [
    388099839383,
    141363764478,
    253757042128,
    162556515860,
    289849639847,
    126598663712,
    171600933709,
    80576580207,
    347679322161,
    408725538627,
    244886980553,
    171682264557,
    366784660912,
]

C3 = [
    84003082499,
    245906362572,
    398398702796,
    157559004814,
    157418944324,
    411242039391,
    270378838199,
    182942084181,
    33847193530,
    149137845569,
    382620866773,
    120769412025,
    272019119100,
]


M_0 = N1 * N2 * N3
m1 = N2 * N3
m2 = N1 * N3
m3 = N1 * N2

n1 = modinv(m1, N1)
n2 = modinv(m2, N2)
n3 = modinv(m3, N3)

intro = f"""
Последовательно вычисляем следующие значения: 

$M_0 = N_1 \\cdot N_2 \\cdot N_3 = {M_0}$

$m_1 = N_2 \\cdot N_3 = {m1}$ 

$m_2 = N_1 \\cdot N_3 = {m2}$

$m_3 = N_1 \\cdot N_2 = {m3}$ 

$n_1 = m_1 ^ {{–1}} \\mod{{N_1}} = {n1}$

$n_2 = m_2 ^ {{–1}} \\mod{{N_2}} = {n2}$

$n_3 = m_3 ^ {{–1}} \\mod{{N_3}} = {n3}$ 
"""


def step(_c1, _c2, _c3):
    S = _c1 * n1 * m1 + _c2 * n2 * m2 + _c3 * n3 * m3
    S_mod_m0 = S % M_0
    M = int(round(S_mod_m0 ** (1.0 / 3)))

    tmpl = f"""
$c_1={_c1}, c_2={_c2}, c_3={_c3}$

$S = c1 \\cdot n_1 \\cdot m_1 + c2 \\cdot n2 \\cdot m_2 + c3 \\cdot n3 \\cdot m_3 = \\seqsplit{{{S}}}$ 

$S \\mod{{M_0}} = {S_mod_m0}$ 

$M = (S \\mod{{M_0}})^{{1/e}} = {M}$
	"""

    return tmpl


print(intro)

for c1, c2, c3 in zip(C1, C2, C3):
    print(step(c1, c2, c3))
